name: Coverage github
run-name: ${{ github.actor }} is testing out GitHub Actions
on: [push, pull_request]

jobs:
  run_unittests:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.13']
        exclude:
          - os: macos-latest
            python-version: "3.13"
          - os: windows-latest
            python-version: "3.13"
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Dependencies with Poetry
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install --no-root
      - name: Run Tests
        run: |
          cd ./PlatformWithDashboards
          echo "SECRET_KEY = 'django-insecure-dummy-secret'" > ./PlatformWithDashboard/secrets.py
          poetry run python manage.py test
      - name: Update passed icon
        if: success()
        uses: Sibz/github-status-action@v1
        with:
          authToken: ${{secrets.GIT_TOKEN}}
          context: 'CI CHECK'
          description: 'Passed'
          state: 'success'
          sha: ${{github.event.pull_request.head.sha || github.sha}}
      - name: Check coverage
        run: |
          cd ./PlatformWithDashboards
          poetry run python coverage_cicd.py
        env:
          COVERAGE_THRESHOLD: ${{vars.COVERAGE_THRESHOLD}}
      - name: Show test logs
        if: failure()
        run: cat ./PlatformWithDashboards/test.log || echo "No log found"

  update-badge:
    runs-on: ubuntu-latest
    needs: run_unittests
    if: always()

    steps:
    - name: Determine badge status
      id: badge-status
      run: |
        if [ "${{ needs.run_unittests.result }}" == "success" ]; then
          echo "status=passing" >> $GITHUB_OUTPUT
          echo "color=#4c1" >> $GITHUB_OUTPUT
        else
          echo "status=failing" >> $GITHUB_OUTPUT
          echo "color=#e05d44" >> $GITHUB_OUTPUT
        fi

    - name: Create SVG Badge
      run: |
        cat > git-actions.svg << 'EOF'
        <svg xmlns="http://www.w3.org/2000/svg" width="206" height="20">
          <title>GitHub Actions Demo - ${{ steps.badge-status.outputs.status }}</title>
          <defs>
            <linearGradient id="workflow-fill" x1="50%" y1="0%" x2="50%" y2="100%">
              <stop stop-color="#444D56" offset="0%"></stop>
              <stop stop-color="#24292E" offset="100%"></stop>
            </linearGradient>
            <linearGradient id="state-fill" x1="50%" y1="0%" x2="50%" y2="100%">
              <stop stop-color="${{ steps.badge-status.outputs.color }}" offset="0%"></stop>
              <stop stop-color="${{ steps.badge-status.outputs.color }}" offset="100%"></stop>
            </linearGradient>
          </defs>
          <g fill="none" fill-rule="evenodd">
            <g font-family="'DejaVu Sans',Verdana,Geneva,sans-serif" font-size="11">
              <path id="workflow-bg" d="M0,3 C0,1.3431 1.3552,0 3.02702703,0 L146,0 L146,20 L3.02702703,20 C1.3552,20 0,18.6569 0,17 L0,3 Z" fill="url(#workflow-fill)" fill-rule="nonzero"></path>
              <text fill="#010101" fill-opacity=".3">
                <tspan x="22.1981982" y="15" aria-hidden="true">GitHub Actions Demo</tspan>
              </text>
              <text fill="#FFFFFF">
                <tspan x="22.1981982" y="14">GitHub Actions Demo</tspan>
              </text>
            </g>
            <g transform="translate(146)" font-family="'DejaVu Sans',Verdana,Geneva,sans-serif" font-size="11">
              <path d="M0 0h56.897C58.61 0 60 1.343 60 3v14c0 1.657-1.39 3-3.103 3H0V0z" id="state-bg" fill="url(#state-fill)" fill-rule="nonzero"></path>
              <text fill="#010101" fill-opacity=".3" aria-hidden="true">
                <tspan x="4" y="15">${{ steps.badge-status.outputs.status }}</tspan>
              </text>
              <text fill="#FFFFFF">
                <tspan x="4" y="14">${{ steps.badge-status.outputs.status }}</tspan>
              </text>
            </g>
            <path fill="#959DA5" d="M11 3c-3.868 0-7 3.132-7 7a6.996 6.996 0 0 0 4.786 6.641c.35.062.482-.148.482-.332 0-.166-.01-.718-.01-1.304-1.758.324-2.213-.429-2.353-.822-.079-.202-.42-.823-.717-.99-.245-.13-.595-.454-.01-.463.552-.009.946.508 1.077.718.63 1.058 1.636.76 2.039.577.061-.455.245-.761.446-.936-1.557-.175-3.185-.779-3.185-3.456 0-.762.271-1.392.718-1.882-.07-.175-.315-.892.07-1.855 0 0 .586-.183 1.925.718a6.5 6.5 0 0 1 1.75-.236 6.5 6.5 0 0 1 1.75.236c1.338-.91 1.925-.718 1.925-.718.385.963.14 1.68.07 1.855.446.49.717 1.112.717 1.882 0 2.686-1.636 3.28-3.194 3.456.254.219.473.639.473 1.295 0 .936-.009 1.689-.009 1.925 0 .184.131.402.481.332A7.011 7.011 0 0 0 18 10c0-3.867-3.133-7-7-7z"></path>
          </g>
        </svg>
        EOF

    - name: Update Gist
      uses: exuanbo/actions-deploy-gist@v1
      with:
        token: ${{ secrets.GIT_TOKEN }}
        gist_id: 10addf2357a528180330d3f6db745d43
        file_path: git-actions.svg
        file_type: text